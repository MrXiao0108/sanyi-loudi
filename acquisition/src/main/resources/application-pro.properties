server.port=8082
#datasouce
elasticjob.reg-center.server-lists=127.0.0.1:2181
elasticjob.preferred.network.ip=127.0.0.1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dzics_analysis_display?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&serverTimezone=GMT%2B8&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=sanyi
spring.datasource.password=sanyi
spring.cache.type=redis
#service-monitoring
spring.application.name=dzics-acquisition-service
#management.endpoints.web.exposure.include=*
#spring.boot.admin.client.url=http://192.168.8.117:2233
#hikari
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=100
spring.datasource.hikari.maximum-pool-size=10000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=500000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=540000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
#
mybatis-plus.type-enums-package=com.dzics.common.enums
mybatis.type-aliases-package=com.dzics.data.acquisition.model.entity
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
#
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
spring.rabbitmq.addresses=127.0.0.1:5672
spring.rabbitmq.username=sanyi
spring.rabbitmq.password=sanyi
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=1
spring.rabbitmq.listener.simple.max-concurrency=1
spring.rabbitmq.listener.simple.prefetch=1
spring.rabbitmq.listener.direct.retry.enabled=true
spring.rabbitmq.listener.direct.retry.max-attempts=3
#远程地址
spring.rabbitmq.remote.host=127.0.0.1
spring.rabbitmq.remote.port=5672
spring.rabbitmq.remote.username=sanyi
spring.rabbitmq.remote.password=sanyi
#本地地址
spring.rabbitmq.local.host=127.0.0.1
spring.rabbitmq.local.port=5672
spring.rabbitmq.local.username=sanyi
spring.rabbitmq.local.password=sanyi
#底层读取队列
accq.read.cmd.queue.base=dzics-dev-gather-v1-queue
accq.read.cmd.queue.base.exchange=dzics-dev-gather-v1-exchange
accq.read.cmd.queue.base.routing=dzics-dev-gather-v1-routing
#测试队列
#accq.read.cmd.queue.base=dzics-cj-queue
#状态队列配置
accq.read.cmd.queue.base.state=dzics-dev-gather-v1-state
accq.state.routing=dzics-dev-gather-v1-routing-state
accq.read.cmd.queue.base.state.dead=dzics-dev-gather-v1-state-dead
accq.state.routing.dead=dzics-dev-gather-v1-routing-state-dead
accq.state.routing.copy=dzics-dev-gather-v1-routing-state-copy
accq.read.cmd.queue.base.state.copy=dzics-dev-gather-v1-state-copy
accq.state.exchange=dzics-dev-gather-v1-exchange-state
#脉冲信号队列
accq.read.cmd.queue.base.pulse.signal=dzics-dev-gather-v1-pulse-signal
accq.pulse.signal.routing=dzics-dev-gather-v1-routing-pulse-signal
accq.pulse.signal.exchange=dzics-dev-gather-v1-exchange-pulse-signal
#检测设备
accq.read.cmd.queue.base.checkout.equipment=dzics-dev-gather-v1-checkout-equipment
accq.checkout.equipment.routing=dzics-dev-gather-v1-routing-checkout-equipment
accq.read.cmd.queue.base.checkout.equipment.dead=dzics-dev-gather-v1-checkout-equipment-dead
accq.checkout.equipment.routing.dead=dzics-dev-gather-v1-routing-checkout-equipment-dead
accq.checkout.equipment.exchange=dzics-dev-gather-v1-exchange-checkout-equipment
#实时日志信息队列
accq.read.cmd.queue.equipment.realTime=dzics-dev-gather-v1-realTime-logs
accq.realTime.equipment.routing=dzics-dev-gather-v1-routing-realTime-logs
accq.read.cmd.queue.equipment.realTime.dead=dzics-dev-gather-v1-realTime-logs-dead
accq.realTime.equipment.routing.dead=dzics-dev-gather-v1-routing-realTime-logs-dead
accq.realTime.equipment.exchange=dzics-dev-gather-v1-exchange-realTime-logs

#刀具检测数据
accq.cutting.tool.detection=dzics-dev-cutting-tool-detection
accq.cutting.tool.detection.routing=dzics-dev-cutting-tool-detection-routing
accq.cutting.tool.detection.dead=dzics-dev-cutting-tool-detection-dead
accq.cutting.tool.detection.routing.dead=dzics-dev-cutting-tool-detection-routing-dead
accq.cutting.tool.detection.exchange=dzics-dev-cutting-tool-detection-exchange

#机床告警日志
accq.tool.alarm.logs=dzics-dev-tool-alarm-logs
accq.tool.alarm.logs.routing=dzics-dev-tool-alarm-logs-routing
accq.tool.alarm.logs.routing.exchange=dzics-dev-tool-alarm-logs-exchange
#报工位置队列
accq.product.position.query=dzics-dev-gather-v1-product-position
accq.product.position.routing=dzics-dev-gather-v1-routing-product-position
accq.product.position.exchange=dzics-dev-gather-v1-exchange-product-position
#需要报工为MOM的数据队列
mom.accq.product.position.query=mom-dzics-dev-gather-v1-product-position
mom.accq.product.position.routing=mom-dzics-dev-gather-v1-routing-product-position
mom.accq.product.position.exchange=mom-dzics-dev-gather-v1-exchange-product-position
#华培绑定检测数据二维码队列消息底层上发
accq.product.qrode.up.query=dzics-dev-gather-v1-check-qrodeup
accq.product.qrode.up.routing=dzics-dev-gather-v1-routing-check-qrodeup
accq.product.qrode.up.exchange=dzics-dev-gather-v1-exchange-check-qrodeup

#华培绑定检测数据二维码队列消息底层上发校验吗
accq.product.qrode.up.udp.query=dzics-dev-gather-v1-check-udp-qrodeup
accq.product.qrode.up.udp.routing=dzics-dev-gather-v1-routing-udp-check-qrodeup
accq.product.qrode.up.udp.query.dead=dzics-dev-gather-v1-check-udp-qrodeup-dead
accq.product.qrode.up.udp.routing.dead=dzics-dev-gather-v1-routing-udp-check-qrodeup-dead
accq.product.qrode.up.udp.exchange=dzics-dev-gather-v1-exchange-udp-check-qrodeup

#华培绑定检测数据二维码队列消息底层下发udp队列
accq.product.qrode.lower.query=dzics-dev-gather-v1-check-qrodelower
accq.product.qrode.lower.routing=dzics-dev-gather-v1-routing-check-qrodelower
accq.product.qrode.lower.query.dead=dzics-dev-gather-v1-check-qrodelower-dead
accq.product.qrode.lower.routing.dead=dzics-dev-gather-v1-routing-check-qrodelower-dead
accq.product.qrode.lower.exchange=dzics-dev-gather-v1-exchange-check-qrodelower

#触发刷新前端页面指令
dzics.html.queue.kanban.Refresh=dzics.html.queue.kanban.Refresh
dzics.html.exchange.kanban.Refresh=dzics.html.exchange.kanban.Refresh
dzics.html.routing.kanban.Refresh=dzics.html.routing.kanban.Refresh

#指令数据信息转发IOT
dzics.cmd.iot.query=dzics-cmd-iot-query
dzics.cmd.iot.exchange=dzics-cmd-iot-exchange
dzics.cmd.iot.routing=dzics-cmd-iot-routing

#=================================================主服务队列
#停机记录
mq.master.exchange.downtime=device-downtime-exchange
mq.master.routing.downtime=device-downtime-routing
#班次脉冲数据
mq.master.exchange.shift.num.signal=device-downtime-shift-num-signal
mq.master.routing.shift.num.signal=device-downtime-shift-num-signal
#推送到看板的消息队列配置
push.kanban.exchange.simple=push-kanban-exchange-simple
push.kanban.queue.simple=push-kanban-queue-simple
push.kanban.routing.simple=push-kanban-routing-simple
push.kanban.queue.dead.simple=push-kanban-queue-dead-simple
push.kanban.routing.dead.simple=push-kanban-routing-dead-simple
#唯一id键
id.key=worker_id_sequence_dzisc_cj
workerId=1
datacenterId=1
#logging.level.com.dzics=debug
logging.config=classpath:logback-pro.xml
spring.redis.database=1
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=sanyi
spring.redis.timeout=3000
#数据缓存块前缀
dzics.redis.cache.prekey=dzics:device:
#缓存分块数量
dzics.redis.cache.partition=2000
#每个分块长度
dzics.redis.cache.size=100
#==========
#截取识别码截取长度
tcp.identification.start=0
tcp.identification.end=4
#订单号截取长度
tcp.orderCode.start=4
tcp.orderCode.end=8
#产线序号截取长度
tcp.lineNo.start=8
tcp.lineNo.end=9
#设备类型截取长度
tcp.deviceType.start=9
tcp.deviceType.end=10
#ip后三位截取长度
tcp.ip.start=10
tcp.ip.end=13
#ip设备序号截取长度
tcp.deviceNo.start=14
tcp.deviceNo.end=16

#自定义文档
knife4j.enable=false

#netty socket 配置
socketIo.port=9994
# 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
socketIo.maxFramePayloadLength=1048576
# 设置http交互最大内容长度
socketIo.maxHttpContentLength=1048576
# socket连接数大小（如只监听一个端口boss线程组为1即可）
socketIo.bossCount=1
socketIo.workCount=100
socketIo.allowCustomRequests=true
# 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
socketIo.upgradeTimeout=1000000
# Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
socketIo.pingTimeout=6000000
# Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
socketIo.pingInterval=25000
# 系统配置 SANY 表示三一中性液压
system.config.depart=SANY
#system.config.depart=FEISHI
#二维码检测指令下发到UDP
dzdc.udp.client.qr.port=26666
orderline.maps[DZ-19471]=192.168.10.232
orderline.maps[DZ-18711]=10.36.136.41
orderline.maps[DZ-18721]=10.36.136.43
orderline.maps[DZ-18731]=10.36.136.45
orderline.maps[DZ-18741]=10.36.136.47
orderline.maps[DZ-18751]=10.36.136.49
orderline.maps[DZ-18761]=10.36.136.51
orderline.maps[DZ-18771]=10.36.136.53
orderline.maps[DZ-18781]=10.36.136.55
orderline.maps[DZ-18791]=10.36.136.57
orderline.maps[DZ-18801]=10.36.136.59
orderline.maps[DZ-18871]=10.36.136.61
orderline.maps[DZ-18881]=10.36.136.63
orderline.maps[DZ-18891]=10.36.136.65
orderline.maps[DZ-18901]=10.36.136.67
orderline.maps[DZ-18911]=10.36.136.69
orderline.maps[DZ-19551]=10.36.136.71
orderline.maps[DZ-19561]=10.36.136.73
car.direct.order.exchange=orderExchange
car.direct.order.routing.deadLetterRouting=deadLetterRouting
car.direct.order.routing.repeatTradeRouting=repeatTradeRouting
car.direct.order.queue.delayed=queueDelayedOrder
car.direct.order.queue.deadLetter=deadLetterOrder

# 质量参数上传 转发到发送mom队列
mom.upload.quality.param.queue=send-mom-upload-quality-param-queue
mom.upload.quality.param.exchange=send-mom-upload-quality-param-exchange
mom.upload.quality.param.routing=send-mom-upload-quality-param-routing
